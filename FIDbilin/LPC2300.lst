


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2300.S: Startup file for Philips LPC2300/LPC2400 
                       device series         */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2007 Keil - An ARM Company. All rights
                        reserved.            */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The LPC2300.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x00000000  default setting (not remapped)
   23 00000000         ; *     0x40000000  when RAM_MODE is used
   24 00000000         ; *
   25 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   26 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   27 00000000         ; */
   28 00000000         
   29 00000000         
   30 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   31 00000000         
   32 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   33 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   34 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   35 00000000 00000013 
                       Mode_SVC



ARM Macro Assembler    Page 2 


                               EQU              0x13
   36 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   37 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   38 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   39 00000000         
   40 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   41 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   42 00000000         
   43 00000000         
   44 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   45 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   46 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   47 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   51 00000000         ;// </h>
   52 00000000         
   53 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   54 00000000 00000008 
                       SVC_Stack_Size
                               EQU              0x00000008
   55 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   56 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   57 00000000 00000100 
                       IRQ_Stack_Size
                               EQU              0x00000100
   58 00000000         ;USR_Stack_Size  EQU     0x00002800
   59 00000000 00000800 
                       USR_Stack_Size
                               EQU              0x00000800
   60 00000000         
   61 00000000         
   63 00000000 00000108 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   64 00000000         
   65 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   66 00000000         
   67 00000000         Stack_Mem



ARM Macro Assembler    Page 3 


                               SPACE            USR_Stack_Size
   68 00000800         __initial_sp
                               SPACE            ISR_Stack_Size
   69 00000908         
   70 00000908         Stack_Top
   71 00000908         
   72 00000908         
   73 00000908         ;// <h> Heap Configuration
   74 00000908         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   75 00000908         ;// </h>
   76 00000908         
   77 00000908         ;Heap_Size       EQU     0x00002000
   78 00000908 00001000 
                       Heap_Size
                               EQU              0x00001000
   79 00000908         
   80 00000908                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   81 00000000         __heap_base
   82 00000000         Heap_Mem
                               SPACE            Heap_Size
   83 00001000         __heap_limit
   84 00001000         
   85 00001000         
   86 00001000         ; System Control Block (SCB) Module Definitions
   87 00001000 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
   88 00001000 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
   89 00001000 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
   90 00001000 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
   91 00001000 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
   92 00001000 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
   93 00001000 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
   94 00001000 0000010C 
                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sele
                                                            ct Reg Offset
   95 00001000 000001A0 
                       SCS_OFS EQU              0x1A0       ; System Control an
                                                            d Status Reg Offset
                                                            



ARM Macro Assembler    Page 4 


   96 00001000 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Peripheral Clock 
                                                            Select Reg 0 Offset
                                                            
   97 00001000 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Peripheral Clock 
                                                            Select Reg 1 Offset
                                                            
   98 00001000         
   99 00001000         ; Constants
  100 00001000 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
  101 00001000 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
  102 00001000 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
  103 00001000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  104 00001000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  105 00001000 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
  106 00001000 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  107 00001000 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  108 00001000         
  109 00001000         ;// <e> Clock Setup
  110 00001000         ;//   <h> System Controls and Status Register (SCS)
  111 00001000         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  112 00001000         ;//                     <0=>  1 MHz to 20 MHz
  113 00001000         ;//                     <1=> 15 MHz to 24 MHz
  114 00001000         ;//     <e1.5>       OSCEN: Main Oscillator Enable
  115 00001000         ;//     </e>
  116 00001000         ;//   </h>
  117 00001000         ;//
  118 00001000         ;//   <h> Clock Source Select Register (CLKSRCSEL)
  119 00001000         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  120 00001000         ;//                     <0=> Internal RC oscillator
  121 00001000         ;//                     <1=> Main oscillator
  122 00001000         ;//                     <1=> RTC oscillator
  123 00001000         ;//   </h>
  124 00001000         ;//
  125 00001000         ;//   <h> PLL Configuration Register (PLLCFG)
  126 00001000         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  127 00001000         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection



ARM Macro Assembler    Page 5 


  128 00001000         ;//                     <1-32768><#-1>
  129 00001000         ;//                     <i> M Value
  130 00001000         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  131 00001000         ;//                     <1-256><#-1>
  132 00001000         ;//                     <i> N Value
  133 00001000         ;//   </h>
  134 00001000         ;//
  135 00001000         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  136 00001000         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f
                       rom PLL
  137 00001000         ;//                     <1-256><#-1>
  138 00001000         ;//   </h>
  139 00001000         ;//
  140 00001000         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  141 00001000         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  142 00001000         ;//                     <1-16><#-1>
  143 00001000         ;//   </h>
  144 00001000         ;//
  145 00001000         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  146 00001000         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  147 00001000         ;//                     <0=> Pclk = Cclk / 4
  148 00001000         ;//                     <1=> Pclk = Cclk
  149 00001000         ;//                     <2=> Pclk = Cclk / 2
  150 00001000         ;//                     <3=> Pclk = Hclk / 8
  151 00001000         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  152 00001000         ;//                     <0=> Pclk = Cclk / 4
  153 00001000         ;//                     <1=> Pclk = Cclk
  154 00001000         ;//                     <2=> Pclk = Cclk / 2
  155 00001000         ;//                     <3=> Pclk = Hclk / 8
  156 00001000         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  157 00001000         ;//                     <0=> Pclk = Cclk / 4
  158 00001000         ;//                     <1=> Pclk = Cclk
  159 00001000         ;//                     <2=> Pclk = Cclk / 2
  160 00001000         ;//                     <3=> Pclk = Hclk / 8
  161 00001000         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  162 00001000         ;//                     <0=> Pclk = Cclk / 4
  163 00001000         ;//                     <1=> Pclk = Cclk
  164 00001000         ;//                     <2=> Pclk = Cclk / 2
  165 00001000         ;//                     <3=> Pclk = Hclk / 8
  166 00001000         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  167 00001000         ;//                     <0=> Pclk = Cclk / 4
  168 00001000         ;//                     <1=> Pclk = Cclk
  169 00001000         ;//                     <2=> Pclk = Cclk / 2
  170 00001000         ;//                     <3=> Pclk = Hclk / 8
  171 00001000         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  172 00001000         ;//                     <0=> Pclk = Cclk / 4
  173 00001000         ;//                     <1=> Pclk = Cclk
  174 00001000         ;//                     <2=> Pclk = Cclk / 2
  175 00001000         ;//                     <3=> Pclk = Hclk / 8
  176 00001000         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1



ARM Macro Assembler    Page 6 


  177 00001000         ;//                     <0=> Pclk = Cclk / 4
  178 00001000         ;//                     <1=> Pclk = Cclk
  179 00001000         ;//                     <2=> Pclk = Cclk / 2
  180 00001000         ;//                     <3=> Pclk = Hclk / 8
  181 00001000         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0
  182 00001000         ;//                     <0=> Pclk = Cclk / 4
  183 00001000         ;//                     <1=> Pclk = Cclk
  184 00001000         ;//                     <2=> Pclk = Cclk / 2
  185 00001000         ;//                     <3=> Pclk = Hclk / 8
  186 00001000         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  187 00001000         ;//                     <0=> Pclk = Cclk / 4
  188 00001000         ;//                     <1=> Pclk = Cclk
  189 00001000         ;//                     <2=> Pclk = Cclk / 2
  190 00001000         ;//                     <3=> Pclk = Hclk / 8
  191 00001000         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  192 00001000         ;//                     <0=> Pclk = Cclk / 4
  193 00001000         ;//                     <1=> Pclk = Cclk
  194 00001000         ;//                     <2=> Pclk = Cclk / 2
  195 00001000         ;//                     <3=> Pclk = Hclk / 8
  196 00001000         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  197 00001000         ;//                     <0=> Pclk = Cclk / 4
  198 00001000         ;//                     <1=> Pclk = Cclk
  199 00001000         ;//                     <2=> Pclk = Cclk / 2
  200 00001000         ;//                     <3=> Pclk = Hclk / 8
  201 00001000         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  202 00001000         ;//                     <0=> Pclk = Cclk / 4
  203 00001000         ;//                     <1=> Pclk = Cclk
  204 00001000         ;//                     <2=> Pclk = Cclk / 2
  205 00001000         ;//                     <3=> Pclk = Hclk / 8
  206 00001000         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  207 00001000         ;//                     <0=> Pclk = Cclk / 4
  208 00001000         ;//                     <1=> Pclk = Cclk
  209 00001000         ;//                     <2=> Pclk = Cclk / 2
  210 00001000         ;//                     <3=> Pclk = Hclk / 8
  211 00001000         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  212 00001000         ;//                     <0=> Pclk = Cclk / 4
  213 00001000         ;//                     <1=> Pclk = Cclk
  214 00001000         ;//                     <2=> Pclk = Cclk / 2
  215 00001000         ;//                     <3=> Pclk = Hclk / 6
  216 00001000         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  217 00001000         ;//                     <0=> Pclk = Cclk / 4
  218 00001000         ;//                     <1=> Pclk = Cclk
  219 00001000         ;//                     <2=> Pclk = Cclk / 2
  220 00001000         ;//                     <3=> Pclk = Hclk / 6
  221 00001000         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  222 00001000         ;//                     <0=> Pclk = Cclk / 4
  223 00001000         ;//                     <1=> Pclk = Cclk
  224 00001000         ;//                     <2=> Pclk = Cclk / 2
  225 00001000         ;//                     <3=> Pclk = Hclk / 6
  226 00001000         ;//   </h>



ARM Macro Assembler    Page 7 


  227 00001000         ;//
  228 00001000         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL
                       1)
  229 00001000         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  230 00001000         ;//                     <0=> Pclk = Cclk / 4
  231 00001000         ;//                     <1=> Pclk = Cclk
  232 00001000         ;//                     <2=> Pclk = Cclk / 2
  233 00001000         ;//                     <3=> Pclk = Hclk / 8
  234 00001000         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  235 00001000         ;//                     <0=> Pclk = Cclk / 4
  236 00001000         ;//                     <1=> Pclk = Cclk
  237 00001000         ;//                     <2=> Pclk = Cclk / 2
  238 00001000         ;//                     <3=> Pclk = Hclk / 8
  239 00001000         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  240 00001000         ;//                     <0=> Pclk = Cclk / 4
  241 00001000         ;//                     <1=> Pclk = Cclk
  242 00001000         ;//                     <2=> Pclk = Cclk / 2
  243 00001000         ;//                     <3=> Pclk = Hclk / 8
  244 00001000         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  245 00001000         ;//                     <0=> Pclk = Cclk / 4
  246 00001000         ;//                     <1=> Pclk = Cclk
  247 00001000         ;//                     <2=> Pclk = Cclk / 2
  248 00001000         ;//                     <3=> Pclk = Hclk / 8
  249 00001000         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  250 00001000         ;//                     <0=> Pclk = Cclk / 4
  251 00001000         ;//                     <1=> Pclk = Cclk
  252 00001000         ;//                     <2=> Pclk = Cclk / 2
  253 00001000         ;//                     <3=> Pclk = Hclk / 8
  254 00001000         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  255 00001000         ;//                     <0=> Pclk = Cclk / 4
  256 00001000         ;//                     <1=> Pclk = Cclk
  257 00001000         ;//                     <2=> Pclk = Cclk / 2
  258 00001000         ;//                     <3=> Pclk = Hclk / 8
  259 00001000         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  260 00001000         ;//                     <0=> Pclk = Cclk / 4
  261 00001000         ;//                     <1=> Pclk = Cclk
  262 00001000         ;//                     <2=> Pclk = Cclk / 2
  263 00001000         ;//                     <3=> Pclk = Hclk / 8
  264 00001000         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  265 00001000         ;//                     <0=> Pclk = Cclk / 4
  266 00001000         ;//                     <1=> Pclk = Cclk
  267 00001000         ;//                     <2=> Pclk = Cclk / 2
  268 00001000         ;//                     <3=> Pclk = Hclk / 8
  269 00001000         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  270 00001000         ;//                     <0=> Pclk = Cclk / 4
  271 00001000         ;//                     <1=> Pclk = Cclk
  272 00001000         ;//                     <2=> Pclk = Cclk / 2
  273 00001000         ;//                     <3=> Pclk = Hclk / 8
  274 00001000         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2



ARM Macro Assembler    Page 8 


  275 00001000         ;//                     <0=> Pclk = Cclk / 4
  276 00001000         ;//                     <1=> Pclk = Cclk
  277 00001000         ;//                     <2=> Pclk = Cclk / 2
  278 00001000         ;//                     <3=> Pclk = Hclk / 8
  279 00001000         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S
  280 00001000         ;//                     <0=> Pclk = Cclk / 4
  281 00001000         ;//                     <1=> Pclk = Cclk
  282 00001000         ;//                     <2=> Pclk = Cclk / 2
  283 00001000         ;//                     <3=> Pclk = Hclk / 8
  284 00001000         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  285 00001000         ;//                     <0=> Pclk = Cclk / 4
  286 00001000         ;//                     <1=> Pclk = Cclk
  287 00001000         ;//                     <2=> Pclk = Cclk / 2
  288 00001000         ;//                     <3=> Pclk = Hclk / 8
  289 00001000         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  290 00001000         ;//                     <0=> Pclk = Cclk / 4
  291 00001000         ;//                     <1=> Pclk = Cclk
  292 00001000         ;//                     <2=> Pclk = Cclk / 2
  293 00001000         ;//                     <3=> Pclk = Hclk / 8
  294 00001000         ;//   </h>
  295 00001000         ;// </e>
  296 00001000 00000001 
                       CLOCK_SETUP
                               EQU              1
  297 00001000 00000020 
                       SCS_Val EQU              0x00000020
  298 00001000 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  299 00001000 0000000B 
                       PLLCFG_Val
                               EQU              0x0000000B
  300 00001000 00000005 
                       CCLKCFG_Val
                               EQU              0x00000005
  301 00001000 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  302 00001000 00000280 
                       PCLKSEL0_Val
                               EQU              0x00000280
  303 00001000 00000000 
                       PCLKSEL1_Val
                               EQU              0x00000000
  304 00001000         
  305 00001000         
  306 00001000         ; Memory Accelerator Module (MAM) definitions
  307 00001000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  308 00001000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  309 00001000 00000004 
                       MAMTIM_OFS



ARM Macro Assembler    Page 9 


                               EQU              0x04        ; MAM Timing Offset
                                                            
  310 00001000         
  311 00001000         ;// <e> MAM Setup
  312 00001000         ;//   <o1.0..1>   MAM Control
  313 00001000         ;//               <0=> Disabled
  314 00001000         ;//               <1=> Partially Enabled
  315 00001000         ;//               <2=> Fully Enabled
  316 00001000         ;//               <i> Mode
  317 00001000         ;//   <o2.0..2>   MAM Timing
  318 00001000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  319 00001000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  320 00001000         ;//               <i> Fetch Cycles
  321 00001000         ;// </e>
  322 00001000 00000001 
                       MAM_SETUP
                               EQU              1
  323 00001000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  324 00001000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  325 00001000         
  326 00001000         
  327 00001000         ; Area Definition and Entry Point
  328 00001000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  329 00001000         
  330 00001000                 AREA             RESET, CODE, READONLY
  331 00000000                 ARM
  332 00000000         
  333 00000000         
  334 00000000         ; Exception Vectors
  335 00000000         ;  Mapped to Address 0.
  336 00000000         ;  Absolute addressing mode must be used.
  337 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  338 00000000         
  339 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  340 00000004 E59FF018        LDR              PC, Undef_Addr
  341 00000008 E59FF018        LDR              PC, SWI_Addr
  342 0000000C E59FF018        LDR              PC, PAbt_Addr
  343 00000010 E59FF018        LDR              PC, DAbt_Addr
  344 00000014 E1A00000        NOP                          ; Reserved Vector 
  345 00000018         ;               LDR     PC, IRQ_Addr
  346 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
  347 0000001C E59FF018        LDR              PC, FIQ_Addr
  348 00000020         
  349 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  350 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler



ARM Macro Assembler    Page 10 


  351 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  352 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
  353 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  354 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  355 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  356 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  357 00000040         
  358 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  359 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
  360 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  361 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  362 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  363 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  364 00000058         
  365 00000058         
  366 00000058         ; Reset Handler
  367 00000058         
  368 00000058                 EXPORT           Reset_Handler
  369 00000058         Reset_Handler
  370 00000058         
  371 00000058         
  372 00000058         ; Setup Clock
  373 00000058                 IF               CLOCK_SETUP != 0
  374 00000058 E59F00FC        LDR              R0, =SCB_BASE
  375 0000005C E3A010AA        MOV              R1, #0xAA
  376 00000060 E3A02055        MOV              R2, #0x55
  377 00000064         
  378 00000064         ;  Configure and Enable PLL
  379 00000064 E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
  380 00000068 E58031A0        STR              R3, [R0, #SCS_OFS]
  381 0000006C         
  382 0000006C                 IF               (SCS_Val:AND:OSCEN) != 0
  383 0000006C E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m



ARM Macro Assembler    Page 11 


                                                            ain osc stabilize
  384 00000070 E2133040        ANDS             R3, R3, #OSCSTAT
  385 00000074 0AFFFFFC        BEQ              OSC_Loop
  386 00000078                 ENDIF
  387 00000078         
  388 00000078 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock
  389 0000007C E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
  390 00000080 E3A0300B        LDR              R3, =PLLCFG_Val
  391 00000084 E5803084        STR              R3, [R0, #PLLCFG_OFS]
  392 00000088 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  393 0000008C E580208C        STR              R2, [R0, #PLLFEED_OFS]
  394 00000090 E3A03001        MOV              R3, #PLLCON_PLLE
  395 00000094 E5803080        STR              R3, [R0, #PLLCON_OFS]
  396 00000098 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  397 0000009C E580208C        STR              R2, [R0, #PLLFEED_OFS]
  398 000000A0         
  399 000000A0         ;  Wait until PLL Locked
  400 000000A0 E5903088 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  401 000000A4 E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
  402 000000A8 0AFFFFFC        BEQ              PLL_Loop
  403 000000AC         
  404 000000AC E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
  405 000000B0 E59F40A8        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
  406 000000B4 E0033004        AND              R3, R3, R4
  407 000000B8 E3A0400B        LDR              R4, =PLLCFG_Val
  408 000000BC E0333004        EORS             R3, R3, R4
  409 000000C0 1AFFFFF9        BNE              M_N_Lock
  410 000000C4         
  411 000000C4         ;  Setup CPU clock divider
  412 000000C4 E3A03005        MOV              R3, #CCLKCFG_Val
  413 000000C8 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
  414 000000CC         
  415 000000CC         ;  Setup USB clock divider
  416 000000CC E3A03005        LDR              R3, =USBCLKCFG_Val
  417 000000D0 E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
  418 000000D4         
  419 000000D4         ;  Setup Peripheral Clock
  420 000000D4 E3A03D0A        LDR              R3, =PCLKSEL0_Val
  421 000000D8 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
  422 000000DC E3A03000        LDR              R3, =PCLKSEL1_Val
  423 000000E0 E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
  424 000000E4         
  425 000000E4         ;  Switch to PLL Clock
  426 000000E4 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  427 000000E8 E5803080        STR              R3, [R0, #PLLCON_OFS]
  428 000000EC E580108C        STR              R1, [R0, #PLLFEED_OFS]
  429 000000F0 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  430 000000F4                 ENDIF                        ; CLOCK_SETUP
  431 000000F4         
  432 000000F4         
  433 000000F4         ; Setup MAM
  434 000000F4                 IF               MAM_SETUP != 0
  435 000000F4 E59F0060        LDR              R0, =MAM_BASE



ARM Macro Assembler    Page 12 


  436 000000F8 E3A01004        MOV              R1, #MAMTIM_Val
  437 000000FC E5801004        STR              R1, [R0, #MAMTIM_OFS]
  438 00000100 E3A01002        MOV              R1, #MAMCR_Val
  439 00000104 E5801000        STR              R1, [R0, #MAMCR_OFS]
  440 00000108                 ENDIF                        ; MAM_SETUP
  441 00000108         
  442 00000108         
  443 00000108         ; Memory Mapping (when Interrupt Vectors are in RAM)
  444 00000108 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  445 00000108                 IF               :DEF:REMAP
  453                          ENDIF
  454 00000108         
  455 00000108         
  456 00000108         ; Initialise Interrupt System
  457 00000108         ;  ...
  458 00000108         
  459 00000108         
  460 00000108         ; Setup Stack for each mode
  461 00000108         
  462 00000108 E59F0054        LDR              R0, =Stack_Top
  463 0000010C         
  464 0000010C         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  465 0000010C E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  466 00000110 E1A0D000        MOV              SP, R0
  467 00000114 E2400000        SUB              R0, R0, #UND_Stack_Size
  468 00000118         
  469 00000118         ;  Enter Abort Mode and set its Stack Pointer
  470 00000118 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  471 0000011C E1A0D000        MOV              SP, R0
  472 00000120 E2400000        SUB              R0, R0, #ABT_Stack_Size
  473 00000124         
  474 00000124         ;  Enter FIQ Mode and set its Stack Pointer
  475 00000124 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  476 00000128 E1A0D000        MOV              SP, R0
  477 0000012C E2400000        SUB              R0, R0, #FIQ_Stack_Size
  478 00000130         
  479 00000130         ;  Enter IRQ Mode and set its Stack Pointer
  480 00000130 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  481 00000134 E1A0D000        MOV              SP, R0
  482 00000138 E2400C01        SUB              R0, R0, #IRQ_Stack_Size
  483 0000013C         
  484 0000013C         ;  Enter Supervisor Mode and set its Stack Pointer
  485 0000013C E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  486 00000140 E1A0D000        MOV              SP, R0
  487 00000144 E2400008        SUB              R0, R0, #SVC_Stack_Size
  488 00000148         
  489 00000148         ;  Enter User Mode and set its Stack Pointer
  490 00000148 E321F010        MSR              CPSR_c, #Mode_USR
  491 0000014C                 IF               :DEF:__MICROLIB
  496 0000014C         
  497 0000014C E1A0D000        MOV              SP, R0



ARM Macro Assembler    Page 13 


  498 00000150 E24DAB02        SUB              SL, SP, #USR_Stack_Size
  499 00000154         
  500 00000154                 ENDIF
  501 00000154         
  502 00000154         
  503 00000154         ; Enter the C code
  504 00000154         
  505 00000154                 IMPORT           __main
  506 00000154 E59F000C        LDR              R0, =__main
  507 00000158 E12FFF10        BX               R0
  508 0000015C         
  509 0000015C         
  510 0000015C                 IF               :DEF:__MICROLIB
  516 0000015C         ; User Initial Stack & Heap
  517 0000015C E01FC000 
              00FF7FFF 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  518 00000000         
  519 00000000                 IMPORT           __use_two_region_memory
  520 00000000                 EXPORT           __user_initial_stackheap
  521 00000000         __user_initial_stackheap
  522 00000000         
  523 00000000 E59F000C        LDR              R0, =  Heap_Mem
  524 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  525 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  526 0000000C E59F300C        LDR              R3, = Stack_Mem
  527 00000010 E12FFF1E        BX               LR
  528 00000014                 ENDIF
  529 00000014         
  530 00000014         
  531 00000014                 END
              00000000 
              00000800 
              00001000 
              00000000 
Command Line: --debug --no_warn --xref --device=DARMP --apcs=interwork//ropi -o
.\Obj\LPC2300.o -Id:\Keil\ARM\INC\Philips --list=LPC2300.lst LPC2300.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 65 in file LPC2300.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 67 in file LPC2300.s
   Uses
      At line 524 in file LPC2300.s
      At line 526 in file LPC2300.s

Stack_Top 00000908

Symbol: Stack_Top
   Definitions
      At line 70 in file LPC2300.s
   Uses
      At line 462 in file LPC2300.s
Comment: Stack_Top used once
__initial_sp 00000800

Symbol: __initial_sp
   Definitions
      At line 68 in file LPC2300.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 80 in file LPC2300.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 82 in file LPC2300.s
   Uses
      At line 523 in file LPC2300.s
      At line 525 in file LPC2300.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 81 in file LPC2300.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00001000

Symbol: __heap_limit
   Definitions
      At line 83 in file LPC2300.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 353 in file LPC2300.s
   Uses
      At line 343 in file LPC2300.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 361 in file LPC2300.s
   Uses
      At line 353 in file LPC2300.s
      At line 361 in file LPC2300.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 356 in file LPC2300.s
   Uses
      At line 347 in file LPC2300.s
Comment: FIQ_Addr used once
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 363 in file LPC2300.s
   Uses
      At line 356 in file LPC2300.s
      At line 363 in file LPC2300.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 355 in file LPC2300.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 362 in file LPC2300.s
   Uses
      At line 355 in file LPC2300.s
      At line 362 in file LPC2300.s

M_N_Lock 000000AC

Symbol: M_N_Lock
   Definitions
      At line 404 in file LPC2300.s
   Uses
      At line 409 in file LPC2300.s
Comment: M_N_Lock used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

OSC_Loop 0000006C

Symbol: OSC_Loop
   Definitions
      At line 383 in file LPC2300.s
   Uses
      At line 385 in file LPC2300.s
Comment: OSC_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 352 in file LPC2300.s
   Uses
      At line 342 in file LPC2300.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 360 in file LPC2300.s
   Uses
      At line 352 in file LPC2300.s
      At line 360 in file LPC2300.s

PLL_Loop 000000A0

Symbol: PLL_Loop
   Definitions
      At line 400 in file LPC2300.s
   Uses
      At line 402 in file LPC2300.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 330 in file LPC2300.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 349 in file LPC2300.s
   Uses
      At line 339 in file LPC2300.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 369 in file LPC2300.s
   Uses
      At line 349 in file LPC2300.s
      At line 368 in file LPC2300.s

SWI_Addr 00000028



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SWI_Addr
   Definitions
      At line 351 in file LPC2300.s
   Uses
      At line 341 in file LPC2300.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 359 in file LPC2300.s
   Uses
      At line 351 in file LPC2300.s
      At line 359 in file LPC2300.s

Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 350 in file LPC2300.s
   Uses
      At line 340 in file LPC2300.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 358 in file LPC2300.s
   Uses
      At line 350 in file LPC2300.s
      At line 358 in file LPC2300.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 339 in file LPC2300.s
   Uses
      None
Comment: Vectors unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 517 in file LPC2300.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 521 in file LPC2300.s
   Uses
      At line 520 in file LPC2300.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$RESET 00000000

Symbol: .debug_info$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$RESET undefinedComment: .debug_info$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$RESET 00000000

Symbol: .debug_line$$$RESET
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$RESET undefinedComment: .debug_line$$$RESET unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_info$$$.text 00000000

Symbol: .debug_info$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_info$$$.text undefinedComment: .debug_info$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_line$$$.text 00000000

Symbol: .debug_line$$$.text
   Definitions
      None
   Uses
      None
Warning: .debug_line$$$.text undefinedComment: .debug_line$$$.text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.debug_abbrev 00000000

Symbol: .debug_abbrev
   Definitions
      None
   Uses
      None
Warning: .debug_abbrev undefinedComment: .debug_abbrev unused
__ARM_asm.debug_abbrev 00000000

Symbol: __ARM_asm.debug_abbrev
   Definitions
      None
   Uses
      None
Warning: __ARM_asm.debug_abbrev undefinedComment: __ARM_asm.debug_abbrev unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 55 in file LPC2300.s
   Uses
      At line 63 in file LPC2300.s
      At line 472 in file LPC2300.s

CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 92 in file LPC2300.s
   Uses
      At line 413 in file LPC2300.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000005

Symbol: CCLKCFG_Val
   Definitions
      At line 300 in file LPC2300.s
   Uses
      At line 412 in file LPC2300.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 94 in file LPC2300.s
   Uses
      At line 389 in file LPC2300.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 298 in file LPC2300.s
   Uses
      At line 388 in file LPC2300.s
Comment: CLKSRCSEL_Val used once
CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 296 in file LPC2300.s
   Uses
      At line 373 in file LPC2300.s
Comment: CLOCK_SETUP used once
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 56 in file LPC2300.s
   Uses
      At line 63 in file LPC2300.s
      At line 477 in file LPC2300.s

F_Bit 00000040



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: F_Bit
   Definitions
      At line 41 in file LPC2300.s
   Uses
      At line 465 in file LPC2300.s
      At line 470 in file LPC2300.s
      At line 475 in file LPC2300.s
      At line 480 in file LPC2300.s
      At line 485 in file LPC2300.s

Heap_Size 00001000

Symbol: Heap_Size
   Definitions
      At line 78 in file LPC2300.s
   Uses
      At line 82 in file LPC2300.s
      At line 525 in file LPC2300.s

IRQ_Stack_Size 00000100

Symbol: IRQ_Stack_Size
   Definitions
      At line 57 in file LPC2300.s
   Uses
      At line 63 in file LPC2300.s
      At line 482 in file LPC2300.s

ISR_Stack_Size 00000108

Symbol: ISR_Stack_Size
   Definitions
      At line 63 in file LPC2300.s
   Uses
      At line 68 in file LPC2300.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 40 in file LPC2300.s
   Uses
      At line 465 in file LPC2300.s
      At line 470 in file LPC2300.s
      At line 475 in file LPC2300.s
      At line 480 in file LPC2300.s
      At line 485 in file LPC2300.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 308 in file LPC2300.s
   Uses
      At line 439 in file LPC2300.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: MAMCR_Val
   Definitions
      At line 323 in file LPC2300.s
   Uses
      At line 438 in file LPC2300.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 309 in file LPC2300.s
   Uses
      At line 437 in file LPC2300.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 324 in file LPC2300.s
   Uses
      At line 436 in file LPC2300.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 307 in file LPC2300.s
   Uses
      At line 435 in file LPC2300.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 322 in file LPC2300.s
   Uses
      At line 434 in file LPC2300.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 444 in file LPC2300.s
   Uses
      None
Comment: MEMMAP unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 36 in file LPC2300.s
   Uses
      At line 470 in file LPC2300.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 33 in file LPC2300.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 475 in file LPC2300.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 34 in file LPC2300.s
   Uses
      At line 480 in file LPC2300.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 35 in file LPC2300.s
   Uses
      At line 485 in file LPC2300.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 38 in file LPC2300.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 37 in file LPC2300.s
   Uses
      At line 465 in file LPC2300.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 32 in file LPC2300.s
   Uses
      At line 490 in file LPC2300.s
Comment: Mode_USR used once
OSCEN 00000020

Symbol: OSCEN
   Definitions
      At line 101 in file LPC2300.s
   Uses
      At line 382 in file LPC2300.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 100 in file LPC2300.s
   Uses
      None
Comment: OSCRANGE unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 102 in file LPC2300.s
   Uses
      At line 384 in file LPC2300.s
Comment: OSCSTAT used once
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 96 in file LPC2300.s
   Uses
      At line 421 in file LPC2300.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val 00000280

Symbol: PCLKSEL0_Val
   Definitions
      At line 302 in file LPC2300.s
   Uses
      At line 420 in file LPC2300.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 97 in file LPC2300.s
   Uses
      At line 423 in file LPC2300.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 00000000

Symbol: PCLKSEL1_Val
   Definitions
      At line 303 in file LPC2300.s
   Uses
      At line 422 in file LPC2300.s
Comment: PCLKSEL1_Val used once
PLLCFG_OFS 00000084

Symbol: PLLCFG_OFS
   Definitions
      At line 89 in file LPC2300.s
   Uses
      At line 391 in file LPC2300.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000B

Symbol: PLLCFG_Val
   Definitions
      At line 299 in file LPC2300.s
   Uses
      At line 390 in file LPC2300.s
      At line 407 in file LPC2300.s

PLLCON_OFS 00000080




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: PLLCON_OFS
   Definitions
      At line 88 in file LPC2300.s
   Uses
      At line 395 in file LPC2300.s
      At line 427 in file LPC2300.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 104 in file LPC2300.s
   Uses
      At line 426 in file LPC2300.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 103 in file LPC2300.s
   Uses
      At line 394 in file LPC2300.s
      At line 426 in file LPC2300.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 91 in file LPC2300.s
   Uses
      At line 392 in file LPC2300.s
      At line 393 in file LPC2300.s
      At line 396 in file LPC2300.s
      At line 397 in file LPC2300.s
      At line 428 in file LPC2300.s
      At line 429 in file LPC2300.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions
      At line 105 in file LPC2300.s
   Uses
      At line 405 in file LPC2300.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 106 in file LPC2300.s
   Uses
      At line 405 in file LPC2300.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 90 in file LPC2300.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 400 in file LPC2300.s
      At line 404 in file LPC2300.s

PLLSTAT_PLOCK 04000000

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 107 in file LPC2300.s
   Uses
      At line 401 in file LPC2300.s
Comment: PLLSTAT_PLOCK used once
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 87 in file LPC2300.s
   Uses
      At line 374 in file LPC2300.s
Comment: SCB_BASE used once
SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions
      At line 95 in file LPC2300.s
   Uses
      At line 380 in file LPC2300.s
      At line 383 in file LPC2300.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions
      At line 297 in file LPC2300.s
   Uses
      At line 379 in file LPC2300.s
      At line 382 in file LPC2300.s

SVC_Stack_Size 00000008

Symbol: SVC_Stack_Size
   Definitions
      At line 54 in file LPC2300.s
   Uses
      At line 63 in file LPC2300.s
      At line 487 in file LPC2300.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 53 in file LPC2300.s
   Uses
      At line 63 in file LPC2300.s
      At line 467 in file LPC2300.s

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 93 in file LPC2300.s
   Uses
      At line 417 in file LPC2300.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 301 in file LPC2300.s
   Uses
      At line 416 in file LPC2300.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000800

Symbol: USR_Stack_Size
   Definitions
      At line 59 in file LPC2300.s
   Uses
      At line 67 in file LPC2300.s
      At line 498 in file LPC2300.s
      At line 524 in file LPC2300.s

51 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 505 in file LPC2300.s
   Uses
      At line 506 in file LPC2300.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 519 in file LPC2300.s
   Uses
      None
Comment: __use_two_region_memory unused
2 symbols
411 symbols in table
